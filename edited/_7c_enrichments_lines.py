# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2022-11-29 12:16:57
"""
import arcpy
import os
from _7b_enrichments_pts import bEnrichmentsPoints
from sys import argv
from utils import init_gdb, unique_rename, runner

original_gdb, workspace, scratch_workspace = init_gdb()

def cEnrichmentsLines(line_fc):  # 7c Enrichments Lines

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = False

    WFR_TF_Template = os.path.join(workspace, "b_Reference", "WFR_TF_Template")

    # Process: Feature To Point (Feature To Point) (management)
    Line_to_Pt = os.path.join(scratch_workspace, "Line_to_Pt")
    arcpy.management.FeatureToPoint(in_features=line_fc, out_feature_class=Line_to_Pt, point_location="INSIDE")

    # Process: 7b Enrichments pts (7b Enrichments pts)
    line_to_pt_enriched = os.path.join(scratch_workspace, "line_to_pt_enriched")

## --------------7b can't be ran on 'SCC_Data_20221101_Lines'... see screenshot of traceback 
    bEnrichmentsPoints(enrich_pts_out=line_to_pt_enriched, enrich_pts_in=Line_to_Pt)

    # Process: Add Join (Add Join) (management)
    CalTrans_act_ln_standardized = arcpy.management.AddJoin(in_layer_or_view= line_fc,
                                                            in_field="PROJECTID_USER",
                                                            join_table=line_to_pt_enriched,
                                                            join_field="PROJECTID_USER",
                                                            join_type="KEEP_ALL",
                                                            index_join_fields="INDEX_JOIN_FIELDS")[0]

    # Process: Copy Features (2) (Copy Features) (management)
    Line_Layer_Temp_CopyFeatures1 = os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1")
    arcpy.management.CopyFeatures(in_features=CalTrans_act_ln_standardized, 
                                  out_feature_class=Line_Layer_Temp_CopyFeatures1, 
                                  config_keyword="", 
                                  spatial_grid_1=None, 
                                  spatial_grid_2=None, 
                                  spatial_grid_3=None)


## ---------------This threw the error "ERROR 000539: Invalid field PRIMARY_OWNERSHIP_GROUP_1" when ran on 
# ----------------'CalTrans_act_ln_standardized_20220712' & 'CM_CNRAExtract_TrtLn_standardized_20221110'
    # Process: Calculate Owner (Calculate Field) (management)
    Updated_Input_Table_2_ = arcpy.management.CalculateField(in_table=Line_Layer_Temp_CopyFeatures1, 
                                                             field="PRIMARY_OWNERSHIP_GROUP", 
                                                             expression="!PRIMARY_OWNERSHIP_GROUP_1!", 
                                                             expression_type="PYTHON3", 
                                                             code_block="", 
                                                             field_type="TEXT", 
                                                             enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Primary Objective (Calculate Field) (management)
    CDFW_lines_stand_SpatialJoin2_2_ = arcpy.management.CalculateField(in_table=Updated_Input_Table_2_, 
                                                                       field="PRIMARY_OBJECTIVE", 
                                                                       expression="!PRIMARY_OBJECTIVE_1!", 
                                                                       expression_type="PYTHON3", 
                                                                       code_block="", 
                                                                       field_type="TEXT", 
                                                                       enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate County (Calculate Field) (management)
    Updated_Input_Table_3_ = arcpy.management.CalculateField(in_table=CDFW_lines_stand_SpatialJoin2_2_, 
                                                             field="COUNTY", 
                                                             expression="!COUNTY_1!", 
                                                             expression_type="PYTHON3", 
                                                             code_block="", 
                                                             field_type="TEXT", 
                                                             enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate WUI (Calculate Field) (management)
    Updated_Input_Table = arcpy.management.CalculateField(in_table=Updated_Input_Table_3_, 
                                                          field="IN_WUI", 
                                                          expression="!IN_WUI_1!", 
                                                          expression_type="PYTHON3", 
                                                          code_block="", 
                                                          field_type="TEXT", 
                                                          enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Region (Calculate Field) (management)
    Updated_Input_Table_4_ = arcpy.management.CalculateField(in_table=Updated_Input_Table, 
                                                             field="REGION", 
                                                             expression="!REGION_1!", 
                                                             expression_type="PYTHON3", 
                                                             code_block="", 
                                                             field_type="TEXT", 
                                                             enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Activity Description (Calculate Field) (management)
    Updated_Input_Table_5_ = arcpy.management.CalculateField(in_table=Updated_Input_Table_4_, 
                                                             field="ACTIVITY_DESCRIPTION", 
                                                             expression="!ACTIVITY_DESCRIPTION_1!", 
                                                             expression_type="PYTHON3", 
                                                             code_block="", 
                                                             field_type="TEXT", 
                                                             enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Veg (Calculate Field) (management)
    CDFW_lines_stand_SpatialJoin2_3_ = arcpy.management.CalculateField(in_table=Updated_Input_Table_5_, 
                                                                       field="BROAD_VEGETATION_TYPE", 
                                                                       expression="!BROAD_VEGETATION_TYPE_1!", 
                                                                       expression_type="PYTHON3", 
                                                                       code_block="", 
                                                                       field_type="TEXT", 
                                                                       enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Category (Calculate Field) (management)
    Updated_Input_Table_6_ = arcpy.management.CalculateField(in_table=CDFW_lines_stand_SpatialJoin2_3_, 
                                                             field="ACTIVITY_CAT", 
                                                             expression="ifelse(!ACTIVITY_DESCRIPTION!, !BROAD_VEGETATION_TYPE!, !PRIMARY_OBJECTIVE!)", 
                                                             expression_type="PYTHON3", 
                                                             code_block="""def ifelse(Act, Veg, Obj):
    if Act in [\"CHIPPING\", \"DOZER_LINE\", \"HANDLINE\", \"LANDING_TRT\", \"LOP_AND_SCAT\", \"MAST_CHAIN_CRUSH\", \"MOWING\", \"PILE_BURN\", \"PILING\", \"PRECOM_THIN_MAN\", 
                \"PRECOM_THIN_MECH\", \"PRUNING\", \"TREE_RELEASE_WEED\", \"TREE_FELL\", \"YARDING\"]:
        return \"MECH_HFR\"
    elif Act in [\"CLEARCUT\", \"COMM_THIN\", \"CONVERSION\", \"GRP_SELECTION_HARVEST\", \"REHAB_UNDRSTK_AREA\", \"SEED_TREE_PREP_STEP\", \"SEED_TREE_REM_STEP\", \"SEED_TREE_SEED_STEP\", 
                \"SHELTERWD_PREP_STEP\", \"SHELTERWD_REM_STEP\", \"SHELTERWD_SEED_STEP\", \"SINGLE_TREE_SELECTION\", \"TRANSITION_HARVEST\", \"VARIABLE_RETEN_HARVEST\"]:
        return \"TIMB_HARV\"
    elif Act == \"SANI_SALVG_HARVEST\":
        return \"SANI_SALVG\"
    elif Act == \"PEST_CNTRL\" and Veg == \"FOREST\":
        return \"SANI_SALVG\"
    elif Act == \"PEST_CNTRL\" and Veg != \"FOREST\":
        return \"WATSHD_IMPRV\"
    elif Act == \"HERBICIDE_APP\" and Obj in [\"FOREST_PEST_CNTRL\", \"FOREST_STEWARDSHIP\", \"OTHER_FOREST_MGMT\", \"REFORESTATION\", \"SITE_PREP\"]:
        return \"TREE_PLNTING\"
    elif Act == \"HERBICIDE_APP\" and Obj in [\"BURNED_AREA_RESTOR\", \"CARBON_STORAGE\", \"ECO_RESTOR\", \"HABITAT_RESTOR\", \"INV_SPECIES_CNTRL\", \"LAND_PROTECTION\", 
                \"MTN_MEADOW_RESTOR\", \"RIPARIAN_RESTOR\", \"WATSHD_RESTOR\", \"WETLAND_RESTOR\"]:
        return \"WATSHD_IMPRV\"
    elif Act == \"HERBICIDE_APP\" and Obj in [\"BIOMASS_UTIL\", \"CULTURAL_BURN\", \"FIRE_PREVENTION\", \"FUEL_BREAK\", \"NON-TIMB_PRODUCTS\", \"OTHER_FUELS_REDUCTION\", 
                \"PRESCRB_FIRE\", \"RECREATION\", \"ROADWAY_CLEARANCE\", \"TIMBER_HARVEST\", \"UTIL_RIGHT_OF_WAY\"]:
        return \"MECH_HFR\"
    elif Act in [\"SITE_PREP\", \"TREE_PLNTING\", \"TREE_SEEDING\"]:
        return \"TREE_PLNTING\"
    elif Act in [\"BROADCAST_BURN\", \"WM_RESRC_BENEFIT\"]:
        return \"BENEFICIAL_FIRE\"
    elif Act == \"PRESCRB_HERBIVORY\":
        return \"GRAZING\"
    elif Act in [\"EASEMENT\", \"LAND_ACQ\"]:
        return \"LAND_PROTEC\"
    elif Act in [\"AMW_AREA_RESTOR\", \"HABITAT_REVEG\", \"OAK_WDLND_MGMT\", \"ROAD_OBLITERATION\", \"STREAM_CHNL_IMPRV\", \"WETLAND_RESTOR\"]:
        return \"WATSHD_IMPRV\"
    else:
        return \"NOT_DEFINED\"""", field_type="TEXT", enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Residue (Calculate Field) (management)
    Updated_Input_Table_7_ = arcpy.management.CalculateField(in_table=Updated_Input_Table_6_, 
                                                             field="RESIDUE_FATE", 
                                                             expression="!RESIDUE_FATE_1!", 
                                                             expression_type="PYTHON3", 
                                                             code_block="", 
                                                             field_type="TEXT", 
                                                             enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Calendar Year (Calculate Field) (management)
    Updated_Input_Table_8_ = arcpy.management.CalculateField(in_table=Updated_Input_Table_7_, 
                                                             field="Year", 
                                                             expression="Year($feature.ACTIVITY_END)", 
                                                             expression_type="ARCADE", 
                                                             code_block="", 
                                                             field_type="TEXT", 
                                                             enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Year as Text (Calculate Field) (management)
    Updated_Input_Table_9_ = arcpy.management.CalculateField(in_table=Updated_Input_Table_8_, 
                                                             field="Year_txt", 
                                                             expression="!Year!", 
                                                             expression_type="PYTHON3", 
                                                             code_block="", 
                                                             field_type="TEXT", 
                                                             enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate Fed FY (Calculate Field) (management)
    Veg_Summarized_Polygons_Laye3_8_ = arcpy.management.CalculateField(in_table=Updated_Input_Table_9_, 
                                                                       field="Federal_FY", 
                                                                       expression="ifelse(!ACTIVITY_END!)", 
                                                                       expression_type="PYTHON3", 
                                                                       code_block="""def ifelse(DATE):
    if DATE >= datetime.datetime(1994,10,1) and DATE <= datetime.datetime(1995,9,30):
        return 1995
    elif DATE >= datetime.datetime(1995,10,1) and DATE <= datetime.datetime(1996,9,30):
        return 1996
    elif DATE >= datetime.datetime(1996,10,1) and DATE <= datetime.datetime(1997,9,30):
        return 1997
    elif DATE >= datetime.datetime(1997,10,1) and DATE <= datetime.datetime(1998,9,30):
        return 1998
    elif DATE >= datetime.datetime(1998,10,1) and DATE <= datetime.datetime(1999,9,30):
        return 1999
    elif DATE >= datetime.datetime(1999,10,1) and DATE <= datetime.datetime(2000,9,30):
        return 2000
    elif DATE >= datetime.datetime(2000,10,1) and DATE <= datetime.datetime(2001,9,30):
        return 2001
    elif DATE >= datetime.datetime(2001,10,1) and DATE <= datetime.datetime(2002,9,30):
        return 2002
    elif DATE >= datetime.datetime(2002,10,1) and DATE <= datetime.datetime(2003,9,30):
        return 2003
    elif DATE >= datetime.datetime(2003,10,1) and DATE <= datetime.datetime(2004,9,30):
        return 2004
    elif DATE >= datetime.datetime(2004,10,1) and DATE <= datetime.datetime(2005,9,30):
        return 2005
    elif DATE >= datetime.datetime(2005,10,1) and DATE <= datetime.datetime(2006,9,30):
        return 2006
    elif DATE >= datetime.datetime(2006,10,1) and DATE <= datetime.datetime(2007,9,30):
        return 2007
    elif DATE >= datetime.datetime(2007,10,1) and DATE <= datetime.datetime(2008,9,30):
        return 2008
    elif DATE >= datetime.datetime(2008,10,1) and DATE <= datetime.datetime(2009,9,30):
        return 2009
    elif DATE >= datetime.datetime(2009,10,1) and DATE <= datetime.datetime(2010,9,30):
        return 2010
    elif DATE >= datetime.datetime(2010,10,1) and DATE <= datetime.datetime(2011,9,30):
        return 2011
    elif DATE >= datetime.datetime(2011,10,1) and DATE <= datetime.datetime(2012,9,30):
        return 2012
    elif DATE >= datetime.datetime(2012,10,1) and DATE <= datetime.datetime(2013,9,30):
        return 2013
    elif DATE >= datetime.datetime(2013,10,1) and DATE <= datetime.datetime(2014,9,30):
        return 2014
    elif DATE >= datetime.datetime(2014,10,1) and DATE <= datetime.datetime(2015,9,30):
        return 2015
    elif DATE >= datetime.datetime(2015,10,1) and DATE <= datetime.datetime(2016,9,30):
        return 2016
    elif DATE >= datetime.datetime(2016,10,1) and DATE <= datetime.datetime(2017,9,30):
        return 2017
    elif DATE >= datetime.datetime(2017,10,1) and DATE <= datetime.datetime(2018,9,30):
        return 2018
    elif DATE >= datetime.datetime(2018,10,1) and DATE <= datetime.datetime(2019,9,30):
        return 2019
    elif DATE >= datetime.datetime(2019,10,1) and DATE <= datetime.datetime(2020,9,30):
        return 2020
    elif DATE >= datetime.datetime(2020,10,1) and DATE <= datetime.datetime(2021,9,30):
        return 2021
    elif DATE >= datetime.datetime(2021,10,1) and DATE <= datetime.datetime(2022,9,30):
        return 2022
    elif DATE >= datetime.datetime(2022,10,1) and DATE <= datetime.datetime(2023,9,30):
        return 2023
    elif DATE >= datetime.datetime(2023,10,1) and DATE <= datetime.datetime(2024,9,30):
        return 2024
    elif DATE >= datetime.datetime(2024,10,1) and DATE <= datetime.datetime(2025,9,30):
        return 2025
    elif DATE >= datetime.datetime(2025,10,1) and DATE <= datetime.datetime(2026,9,30):
        return 2026
    else:
        return None""", field_type="TEXT", enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Calculate State FY (Calculate Field) (management)
    Veg_Summarized_Polygons_Laye3_7_ = arcpy.management.CalculateField(in_table=Veg_Summarized_Polygons_Laye3_8_, 
                                                                       field="State_FY", 
                                                                       expression="ifelse(!ACTIVITY_END!)", 
                                                                       expression_type="PYTHON3", 
                                                                       code_block="""def ifelse(DATE):
    if DATE >= datetime.datetime(1994,7,1) and DATE <= datetime.datetime(1995,6,30):
        return 1995
    elif DATE >= datetime.datetime(1995,7,1) and DATE <= datetime.datetime(1996,6,30):
        return 1996
    elif DATE >= datetime.datetime(1996,7,1) and DATE <= datetime.datetime(1997,6,30):
        return 1997
    elif DATE >= datetime.datetime(1997,7,1) and DATE <= datetime.datetime(1998,6,30):
        return 1998
    elif DATE >= datetime.datetime(1998,7,1) and DATE <= datetime.datetime(1999,6,30):
        return 1999
    elif DATE >= datetime.datetime(1999,7,1) and DATE <= datetime.datetime(2000,6,30):
        return 2000
    elif DATE >= datetime.datetime(2000,7,1) and DATE <= datetime.datetime(2001,6,30):
        return 2001
    elif DATE >= datetime.datetime(2001,7,1) and DATE <= datetime.datetime(2002,6,30):
        return 2002
    elif DATE >= datetime.datetime(2002,7,1) and DATE <= datetime.datetime(2003,6,30):
        return 2003
    elif DATE >= datetime.datetime(2003,7,1) and DATE <= datetime.datetime(2004,6,30):
        return 2004
    elif DATE >= datetime.datetime(2004,7,1) and DATE <= datetime.datetime(2005,6,30):
        return 2005
    elif DATE >= datetime.datetime(2005,7,1) and DATE <= datetime.datetime(2006,6,30):
        return 2006
    elif DATE >= datetime.datetime(2006,7,1) and DATE <= datetime.datetime(2007,6,30):
        return 2007
    elif DATE >= datetime.datetime(2007,7,1) and DATE <= datetime.datetime(2008,6,30):
        return 2008
    elif DATE >= datetime.datetime(2008,7,1) and DATE <= datetime.datetime(2009,6,30):
        return 2009
    elif DATE >= datetime.datetime(2009,7,1) and DATE <= datetime.datetime(2010,6,30):
        return 2010
    elif DATE >= datetime.datetime(2010,7,1) and DATE <= datetime.datetime(2011,6,30):
        return 2011
    elif DATE >= datetime.datetime(2011,7,1) and DATE <= datetime.datetime(2012,6,30):
        return 2012
    elif DATE >= datetime.datetime(2012,7,1) and DATE <= datetime.datetime(2013,6,30):
        return 2013
    elif DATE >= datetime.datetime(2013,7,1) and DATE <= datetime.datetime(2014,6,30):
        return 2014
    elif DATE >= datetime.datetime(2014,7,1) and DATE <= datetime.datetime(2015,6,30):
        return 2015
    elif DATE >= datetime.datetime(2015,7,1) and DATE <= datetime.datetime(2016,6,30):
        return 2016
    elif DATE >= datetime.datetime(2016,7,1) and DATE <= datetime.datetime(2017,6,30):
        return 2017
    elif DATE >= datetime.datetime(2017,7,1) and DATE <= datetime.datetime(2018,6,30):
        return 2018
    elif DATE >= datetime.datetime(2018,7,1) and DATE <= datetime.datetime(2019,6,30):
        return 2019
    elif DATE >= datetime.datetime(2019,7,1) and DATE <= datetime.datetime(2020,6,30):
        return 2020
    elif DATE >= datetime.datetime(2020,7,1) and DATE <= datetime.datetime(2021,6,30):
        return 2021
    elif DATE >= datetime.datetime(2021,7,1) and DATE <= datetime.datetime(2022,6,30):
        return 2022
    elif DATE >= datetime.datetime(2022,7,1) and DATE <= datetime.datetime(2023,6,30):
        return 2023
    elif DATE >= datetime.datetime(2023,7,1) and DATE <= datetime.datetime(2024,6,30):
        return 2024
    elif DATE >= datetime.datetime(2024,7,1) and DATE <= datetime.datetime(2025,6,30):
        return 2025
    elif DATE >= datetime.datetime(2025,7,1) and DATE <= datetime.datetime(2026,6,30):
        return 2026
    else:
        return None""", field_type="TEXT", enforce_domains="NO_ENFORCE_DOMAINS")[0]

    # Process: Delete Field (Delete Field) (management)
    Line_Layer_Temp_CopyFeatures1_3_ = arcpy.management.DeleteField(in_table=Veg_Summarized_Polygons_Laye3_7_, 
                                                                    drop_field=["PROJECTID_USER", 
                                                                                "AGENCY", 
                                                                                "ORG_ADMIN_p", 
                                                                                "PROJECT_CONTACT", 
                                                                                "PROJECT_EMAIL", 
                                                                                "ADMINISTERING_ORG", 
                                                                                "PROJECT_NAME", 
                                                                                "PROJECT_STATUS", 
                                                                                "PROJECT_START", 
                                                                                "PROJECT_END", 
                                                                                "PRIMARY_FUNDING_SOURCE", 
                                                                                "PRIMARY_FUNDING_ORG", 
                                                                                "IMPLEMENTING_ORG", 
                                                                                "LATITUDE", 
                                                                                "LONGITUDE", 
                                                                                "BatchID_p", 
                                                                                "Val_Status_p", 
                                                                                "Val_Message_p", 
                                                                                "Val_RunDate_p", 
                                                                                "Review_Status_p", 
                                                                                "Review_Message_p", 
                                                                                "Review_RunDate_p", 
                                                                                "Dataload_Status_p", 
                                                                                "Dataload_Msg_p", 
                                                                                "TRMTID_USER", 
                                                                                "PROJECTID", 
                                                                                "PROJECTNAME_", 
                                                                                "ORG_ADMIN_t", 
                                                                                "PRIMARY_OWNERSHIP_GROUP", 
                                                                                "PRIMARY_OBJECTIVE", 
                                                                                "SECONDARY_OBJECTIVE", 
                                                                                "TERTIARY_OBJECTIVE", 
                                                                                "TREATMENT_STATUS", 
                                                                                "COUNTY", 
                                                                                "IN_WUI", 
                                                                                "REGION", 
                                                                                "TREATMENT_AREA", 
                                                                                "TREATMENT_START", 
                                                                                "TREATMENT_END", 
                                                                                "RETREATMENT_DATE_EST", 
                                                                                "TREATMENT_NAME", 
                                                                                "BatchID", 
                                                                                "Val_Status_t", 
                                                                                "Val_Message_t", 
                                                                                "Val_RunDate_t", 
                                                                                "Review_Status_t", 
                                                                                "Review_Message_t", 
                                                                                "Review_RunDate_t", 
                                                                                "Dataload_Status_t", 
                                                                                "Dataload_Msg_t",
                                                                                "ACTIVID_USER", 
                                                                                "TREATMENTID_", 
                                                                                "ORG_ADMIN_a", 
                                                                                "ACTIVITY_DESCRIPTION", 
                                                                                "ACTIVITY_CAT", 
                                                                                "BROAD_VEGETATION_TYPE", 
                                                                                "BVT_USERD", 
                                                                                "ACTIVITY_STATUS", 
                                                                                "ACTIVITY_QUANTITY", 
                                                                                "ACTIVITY_UOM", 
                                                                                "ACTIVITY_START", 
                                                                                "ACTIVITY_END", 
                                                                                "ADMIN_ORG_NAME", 
                                                                                "IMPLEM_ORG_NAME", 
                                                                                "PRIMARY_FUND_SRC_NAME", 
                                                                                "PRIMARY_FUND_ORG_NAME", 
                                                                                "SECONDARY_FUND_SRC_NAME", 
                                                                                "SECONDARY_FUND_ORG_NAME", 
                                                                                "TERTIARY_FUND_SRC_NAME", 
                                                                                "TERTIARY_FUND_ORG_NAME", 
                                                                                "ACTIVITY_PRCT", 
                                                                                "RESIDUE_FATE", 
                                                                                "RESIDUE_FATE_QUANTITY", 
                                                                                "RESIDUE_FATE_UNITS", 
                                                                                "ACTIVITY_NAME", 
                                                                                "VAL_STATUS_a", 
                                                                                "VAL_MSG_a", 
                                                                                "VAL_RUNDATE_a", 
                                                                                "REVIEW_STATUS_a", 
                                                                                "REVIEW_MSG_a", 
                                                                                "REVIEW_RUNDATE_a", 
                                                                                "DATALOAD_STATUS_a", 
                                                                                "DATALOAD_MSG_a", 
                                                                                "Source", 
                                                                                "Year", 
                                                                                "Year_txt", 
                                                                                "Act_Code", 
                                                                                "Crosswalk", 
                                                                                "Federal_FY", 
                                                                                "State_FY"], 
                                                                                method="KEEP_FIELDS")[0]

    # Process: Create Feature Class (Create Feature Class) (management)
    Line_Enriched_Temp_CopyFeatures_3_ = arcpy.management.CreateFeatureclass(out_path=scratch_gdb, 
                                                                             out_name="Line_Enriched_Temp_CopyFeatures", 
                                                                             geometry_type="POLYLINE", 
                                                                             template=[WFR_TF_Template], 
                                                                             has_m="DISABLED", 
                                                                             has_z="DISABLED", 
                                                                             spatial_reference="PROJCS[\"NAD_1983_California_Teale_Albers\",GEOGCS[\"GCS_North_American_1983\",DATUM[\"D_North_American_1983\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Albers\"],PARAMETER[\"False_Easting\",0.0],PARAMETER[\"False_Northing\",-4000000.0],PARAMETER[\"Central_Meridian\",-120.0],PARAMETER[\"Standard_Parallel_1\",34.0],PARAMETER[\"Standard_Parallel_2\",40.5],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0]];-16909700 -8597000 10000;#;#;0.001;#;#;IsHighPrecision", 
                                                                             config_keyword="", 
                                                                             spatial_grid_1=0, 
                                                                             spatial_grid_2=0, 
                                                                             spatial_grid_3=0, 
                                                                             out_alias="")[0]

    # Process: Append (Append) (management)
    # Line_Enriched_Temp_CopyFeatures = arcpy.management.Append(inputs=[Line_Layer_Temp_CopyFeatures1_3_], 
    #                                                           target=Line_Enriched_Temp_CopyFeatures_3_, 
    #                                                           schema_type="NO_TEST", 
    #                                                           field_mapping="PROJECTID_USER \"PROJECT ID USER\" true true false 40 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECTID_USER,0,40;AGENCY \"AGENCY/DEPARTMENT\" true true false 55 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),AGENCY,0,55;ORG_ADMIN_p \"ORG DATA STEWARD\" true true false 55 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ORG_ADMIN_p,0,55;PROJECT_CONTACT \"PROJECT CONTACT\" true true false 40 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECT_CONTACT,0,40;PROJECT_EMAIL \"PROJECT EMAIL\" true true false 40 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECT_EMAIL,0,40;ADMINISTERING_ORG \"ADMINISTERING ORG\" true true false 55 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ADMINISTERING_ORG,0,55;PROJECT_NAME \"PROJECT NAME\" true true false 125 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECT_NAME,0,125;PROJECT_STATUS \"PROJECT STATUS\" true true false 25 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECT_STATUS,0,25;PROJECT_START \"PROJECT START\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECT_START,-1,-1;PROJECT_END \"PROJECT END\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECT_END,-1,-1;PRIMARY_FUNDING_SOURCE \"PRIMARY_FUNDING_SOURCE\" true true false 130 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PRIMARY_FUNDING_SOURCE,0,130;PRIMARY_FUNDING_ORG \"PRIMARY_FUNDING_ORG\" true true false 130 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PRIMARY_FUNDING_ORG,0,130;IMPLEMENTING_ORG \"IMPLEMENTING_ORG\" true true false 55 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),IMPLEMENTING_ORG,0,55;LATITUDE \"LATITUDE CENTROID\" true true false 8 Double 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),LATITUDE,-1,-1;LONGITUDE \"LONGITUDE CENTROID\" true true false 8 Double 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),LONGITUDE,-1,-1;BatchID_p \"Batch ID\" true true false 40 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),BatchID_p,0,40;Val_Status_p \"Validation Status\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Val_Status_p,0,15;Val_Message_p \"Validation Message\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Val_Message_p,0,15;Val_RunDate_p \"Validation Run Date\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Val_RunDate_p,-1,-1;Review_Status_p \"Review Status\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Review_Status_p,0,15;Review_Message_p \"Review Message\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Review_Message_p,0,15;Review_RunDate_p \"Review Run Date\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Review_RunDate_p,-1,-1;Dataload_Status_p \"Dataload Status\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Dataload_Status_p,0,15;Dataload_Msg_p \"Dataload Message\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Dataload_Msg_p,0,15;TRMTID_USER \"TREATMENT ID USER\" true true false 40 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TRMTID_USER,0,40;PROJECTID \"PROJECT ID\" true true false 50 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECTID,0,50;PROJECTNAME_ \"PROJECT NAME\" true true false 125 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PROJECTNAME_,0,125;ORG_ADMIN_t \"ORG DATA STEWARD\" true true false 255 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ORG_ADMIN_t,0,255;PRIMARY_OWNERSHIP_GROUP \"PRIMARY OWNERSHIP GROUP\" true true false 25 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PRIMARY_OWNERSHIP_GROUP,0,0;PRIMARY_OBJECTIVE \"PRIMARY OBJECTIVE\" true true false 65 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PRIMARY_OBJECTIVE,0,0;SECONDARY_OBJECTIVE \"SECONDARY OBJECTIVE\" true true false 65 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),SECONDARY_OBJECTIVE,0,65;TERTIARY_OBJECTIVE \"TERTIARY OBJECTIVE\" true true false 65 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TERTIARY_OBJECTIVE,0,65;TREATMENT_STATUS \"TREATMENT STATUS\" true true false 25 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TREATMENT_STATUS,0,25;COUNTY \"COUNTY\" true true false 25 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),COUNTY,0,25;IN_WUI \"IN WUI\" true true false 30 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),IN_WUI,0,0;REGION \"TASK FORCE REGION\" true true false 25 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),REGION,0,0;TREATMENT_AREA \"TREATMENT AREA (GIS ACRES)\" true true false 8 Double 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TREATMENT_AREA,-1,-1;TREATMENT_START \"TREATMENT START\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TREATMENT_START,-1,-1;TREATMENT_END \"TREATMENT END\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TREATMENT_END,-1,-1;RETREATMENT_DATE_EST \"RETREATMENT DATE ESTIMATE\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),RETREATMENT_DATE_EST,-1,-1;TREATMENT_NAME \"TREATMENT NAME\" true true false 125 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TREATMENT_NAME,0,125;BatchID \"BATCH ID (TREATMENT)\" true true false 40 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),BatchID,0,40;Val_Status_t \"Validation Status\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Val_Status_t,0,15;Val_Message_t \"Validation Message\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Val_Message_t,0,15;Val_RunDate_t \"Validation Run Date\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Val_RunDate_t,-1,-1;Review_Status_t \"Review Status\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Review_Status_t,0,15;Review_Message_t \"Review Message\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Review_Message_t,0,15;Review_RunDate_t \"Review Run Date\" true true false 8 Date 0 0,First,#,C:\\Users\\sageg\\Documents\\ArcGIS\\Projects\\PC414 CWI Million Acres\\scratch.gdb\\Line_Layer_Temp_CopyFeatures1,Review_RunDate_t,-1,-1;Dataload_Status_t \"Dataload Status\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Dataload_Status_t,0,15;Dataload_Msg_t \"Dataload Message\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Dataload_Msg_t,0,15;ACTIVID_USER \"ACTIVITYID USER\" true true false 50 Text 0 0,First,#,os.path.join(scratch_workspace. "Line_Layer_Temp_CopyFeatures1"),ACTIVID_USER,0,50;TREATMENTID_ \"TREATMENTID\" true true false 50 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TREATMENTID_,0,50;ORG_ADMIN_a \"ORG DATA STEWARD\" true true false 150 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ORG_ADMIN_a,0,150;ACTIVITY_DESCRIPTION \"ACTIVITY DESCRIPTION\" true true false 70 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_DESCRIPTION,0,0;ACTIVITY_CAT \"ACTIVITY CATEGORY\" true true false 40 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_CAT,0,0;BROAD_VEGETATION_TYPE \"BROAD VEGETATION TYPE\" true true false 50 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),BROAD_VEGETATION_TYPE,0,0;BVT_USERD \"IS BVT USER DEFINED\" true true false 3 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),BVT_USERD,0,3;ACTIVITY_STATUS \"ACTIVITY STATUS\" true true false 25 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_STATUS,0,25;ACTIVITY_QUANTITY \"ACTIVITY QUANTITY\" true true false 8 Double 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_QUANTITY,-1,-1;ACTIVITY_UOM \"ACTIVITY UNITS\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_UOM,0,15;ACTIVITY_START \"ACTIVITY START\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_START,-1,-1;ACTIVITY_END \"ACTIVITY END\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_END,-1,-1;ADMIN_ORG_NAME \"ADMINISTRATION ORGANIZATION NAME\" true true false 150 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ADMIN_ORG_NAME,0,150;IMPLEM_ORG_NAME \"IMPLEMENTATION ORGANIZATION NAME\" true true false 150 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),IMPLEM_ORG_NAME,0,150;PRIMARY_FUND_SRC_NAME \"PRIMARY FUND SOURCE NAME\" true true false 100 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PRIMARY_FUND_SRC_NAME,0,100;PRIMARY_FUND_ORG_NAME \"PRIMARY FUND ORGANIZATION NAME\" true true false 100 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),PRIMARY_FUND_ORG_NAME,0,100;SECONDARY_FUND_SRC_NAME \"SECONDARY FUND SOURCE NAME\" true true false 100 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),SECONDARY_FUND_SRC_NAME,0,100;SECONDARY_FUND_ORG_NAME \"SECONDARY FUND ORGANIZATION NAME\" true true false 100 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),SECONDARY_FUND_ORG_NAME,0,100;TERTIARY_FUND_SRC_NAME \"TERTIARY FUND SOURCE NAME\" true true false 100 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TERTIARY_FUND_SRC_NAME,0,100;TERTIARY_FUND_ORG_NAME \"TERTIARY FUND ORGANIZATION NAME\" true true false 100 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),TERTIARY_FUND_ORG_NAME,0,100;ACTIVITY_PRCT \"ACTIVITY PERCENT\" true true false 8 Double 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_PRCT,-1,-1;RESIDUE_FATE \"RESIDUE FATE\" true true false 35 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),RESIDUE_FATE,0,0;RESIDUE_FATE_QUANTITY \"RESIDUE FATE QUANTITY\" true true false 8 Double 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),RESIDUE_FATE_QUANTITY,-1,-1;RESIDUE_FATE_UNITS \"RESIDUE FATE UNITS\" true true false 5 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),RESIDUE_FATE_UNITS,0,5;ACTIVITY_NAME \"ACTIVITY NAME\" true true false 150 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),ACTIVITY_NAME,0,150;VAL_STATUS_a \"VALIDATION STATUS\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),VAL_STATUS_a,0,15;VAL_MSG_a \"VALIDATION MESSAGE\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),VAL_MSG_a,0,15;VAL_RUNDATE_a \"VALIDATION RUN DATE\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),VAL_RUNDATE_a,-1,-1;REVIEW_STATUS_a \"REVIEW STATUS\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),REVIEW_STATUS_a,0,15;REVIEW_MSG_a \"REVIEW MESSAGE\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),REVIEW_MSG_a,0,15;REVIEW_RUNDATE_a \"REVIEW RUN DATE\" true true false 8 Date 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),REVIEW_RUNDATE_a,-1,-1;DATALOAD_STATUS_a \"DATALOAD STATUS\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),DATALOAD_STATUS_a,0,15;DATALOAD_MSG_a \"DATALOAD MESSAGE\" true true false 15 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),DATALOAD_MSG_a,0,15;Source \"Source\" true true false 65 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Source,0,65;Year \"Calendar Year\" true true false 4 Long 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Year,0,0;Year_txt \"Year as Text\" true true false 255 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Year_txt,0,0;Act_Code \"USFS Activity Code\" true true false 4 Long 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Act_Code,-1,-1;Crosswalk \"Crosswalk Activities\" true true false 150 Text 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),Crosswalk,0,150;Federal_FY \"Federal FY\" true true false 4 Long 0 0,First,#,os.path.join(scratch-workspace, "Line_Layer_Temp_CopyFeatures1"),Federal_FY,0,0;State_FY \"State FY\" true true false 4 Long 0 0,First,#,os.path.join(scratch_workspace, "Line_Layer_Temp_CopyFeatures1"),State_FY,0,0", subtype="", expression="")[0]

    return Line_Enriched_Temp_CopyFeatures_3_

if __name__ == '__main__':
    # Global Environment settings
    with arcpy.EnvManager(
    extent="""-124.415162172178 32.5342699477235 -114.131212866967 42.0095193288898 GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]]""",  outputCoordinateSystem="""PROJCS["NAD_1983_California_Teale_Albers",GEOGCS["GCS_North_American_1983",DATUM["D_North_American_1983",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Albers"],PARAMETER["False_Easting",0.0],PARAMETER["False_Northing",-4000000.0],PARAMETER["Central_Meridian",-120.0],PARAMETER["Standard_Parallel_1",34.0],PARAMETER["Standard_Parallel_2",40.5],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0]]""", 
    preserveGlobalIds=True, 
    qualifiedFieldNames=False, 
    scratchWorkspace=scratch_workspace, 
    transferDomains=True, 
    transferGDBAttributeProperties=True, 
    workspace=workspace):
        cEnrichmentsLines(*argv[1:])
